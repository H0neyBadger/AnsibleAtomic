---
# tasks file for virt_setup

# role based on http://www.projectatomic.io/docs/quickstart/
- name: Set facts 
  set_fact:
    virt_setup_instance_id : "{{ inventory_hostname }}"
    virt_setup_local_hostname : "{{ inventory_hostname }}.{{ domain }}"
    workspace: "{{ virt_setup_libvirt_dir }}/{{ inventory_hostname }}"
    hypervisor: "{{ groups['hypervisors'] |random }}"
    guest_disk: "{{ inventory_hostname }}.qcow2"
  tags:
    - always

- name: Create VM working dir
  file:
    path: "{{ workspace }}"
    state: directory
    owner: qemu
    group: qemu
    mode: 0750
  become: true
  delegate_to: "{{ hypervisor }}"
  tags:
    - build

- name: Prep the cloud-init source
  template:
    dest: "{{ workspace }}"
    src: "{{ item }}"
  with_items:
    - "meta-data"
    - "user-data"
  become: true
  delegate_to: "{{ hypervisor }}"
  tags:
    - build

- name: Prep the cloud-init ISO
  command: "genisoimage -output init.iso -volid cidata -joliet -rock user-data meta-data"
  args:
    chdir: "{{ workspace }}"
    creates: "{{ workspace }}/init.iso"
  become: true
  delegate_to: "{{ hypervisor }}"
  tags:
    - build

- name: Prep the guest main disk
  command: "cp {{ virt_setup_template }} {{ workspace }}/{{ guest_disk }}"
  args:
    chdir: "{{ workspace }}"
    creates: "{{ guest_disk }}"
  become: true
  delegate_to: "{{ hypervisor }}"
  tags:
    - build

- name: Create the Atomic host virtual machine
  command: >
    virt-install --name "{{ inventory_hostname | quote }}" \
      --description 'Fedora Atomic Host' \
      --ram "{{ virt_setup_ram | quote }}" \
      --vcpus "{{ virt_setup_vcpu | quote }}" \
      --disk path="{{ workspace | quote }}/{{ guest_disk | quote }}" \
      --os-type linux \
      --os-variant fedora25 \
      --network bridge="{{ virt_setup_bridge | quote }}" \
      --disk {{ workspace }}/init.iso,device=cdrom \
      --noautoconsole
  become: true
  delegate_to: "{{ hypervisor }}"
  tags:
    - vm
      
  
